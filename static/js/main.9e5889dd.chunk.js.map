{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Button/Button.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","feedbackOption","onClick","className","css","value","FeedbackOptions","feedbackOptions","feedback","map","Statistics","good","neutral","bad","total","positivePercentage","statistics","Section","title","children","Notification","message","notification","App","useState","setGood","setNeutral","setBad","Math","round","e","target","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,SAAW,oC,iBCA7BD,EAAOC,QAAU,CAAC,eAAiB,iC,gBCAnCD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qICSlBC,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAAnB,OAAiC,wBAAQC,UAAWC,IAAIH,eAAgBC,QAASA,EAASG,MAAOJ,EAAhE,SAAiFA,K,gBCkBlHK,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBL,EAAc,EAAdA,QACxC,OACI,oBAAIC,UAAWC,IAAII,SAAnB,SACKD,EAAgBE,KAAI,SAACR,GAAD,OACjB,oBAAIE,UAAWC,IAAIH,eAAnB,SACI,cAAC,EAAD,CAAQA,eAAgBA,EAAgBC,QAASA,KADbD,S,gBCMzCS,EAVI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAAO,qBAAIZ,UAAWC,IAAIY,WAAnB,UACH,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,Y,gBCOOE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,oBAAIhB,UAAWC,IAAIc,MAAnB,SAA2BA,IAC1BC,M,gBCIEC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,mBAAGlB,UAAWC,IAAIkB,aAAlB,SAAiCD,KCI7B,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAkBMb,EAAQH,EAAOC,EAAUC,EACzBE,EAAqBD,EAAQc,KAAKC,MAAa,IAAPlB,EAAaG,GAAS,EAEpE,OACI,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBX,gBAPD,CAAC,OAAQ,UAAW,OAOeL,QAtB/B,SAAC4B,GAC3B,IAAMtB,EAAWsB,EAAEC,OAAO1B,MAC1B,MAAiB,SAAbG,EACKiB,GAAQ,SAAAO,GAAS,OAAIA,EAAY,KAGzB,YAAbxB,EACKkB,GAAW,SAAAM,GAAS,OAAIA,EAAY,KAG5B,QAAbxB,EACKmB,GAAO,SAAAK,GAAS,OAAIA,EAAY,UADzC,OAeI,cAAC,EAAD,CAASd,MAAM,aAAf,SACa,IAAVJ,EAAc,cAAC,EAAD,CACbH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAAyB,cAAC,EAAD,CAAcM,QAAQ,2BC5C/E,IAYeY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFsB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e5889dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__3HfMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOption\":\"Button_feedbackOption__2QLJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1w7ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__TtDHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1X-H7\"};","import PropTypes from 'prop-types';\r\nimport css from './Button.module.css';\r\n\r\nconst Button = ({ feedbackOption, onClick }) => <button className={css.feedbackOption} onClick={onClick} value={feedbackOption}>{feedbackOption}</button>;\r\n\r\nButton.propTypes = {\r\n    feedbackOption: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport Button from '../Button/Button';\r\nimport css from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ feedbackOptions, onClick }) => {\r\n    return (\r\n        <ul className={css.feedback}>\r\n            {feedbackOptions.map((feedbackOption) =>\r\n                <li className={css.feedbackOption} key={feedbackOption}>\r\n                    <Button feedbackOption={feedbackOption} onClick={onClick} />\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    feedbackOptions: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return <ul className={css.statistics}>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage} %</li>\r\n    </ul>\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport css from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2 className={css.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport css from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n    return <p className={css.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\n\nexport default function App () {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = (e) => {\n    const feedback = e.target.value;\n    if (feedback === 'good') {\n      return setGood(prevState => prevState + 1);\n    }\n    \n    if (feedback === 'neutral') {\n      return setNeutral(prevState => prevState + 1);\n    }\n    \n    if (feedback === 'bad') {\n      return setBad(prevState => prevState + 1);\n    }\n  };\n\n  const feedbackOptions = ['good', 'neutral', 'bad'];\n  const total = good + neutral + bad;\n  const positivePercentage = total ? Math.round(good * 100 / total) : 0;\n\n  return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions feedbackOptions={feedbackOptions} onClick={handleLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total !== 0 ? <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage} /> : <Notification message=\"No feedback given\" />}\n        </Section>\n      </>\n    );\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}